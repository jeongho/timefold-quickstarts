<?xml version="1.0" encoding="UTF-8"?>
<solver xmlns="https://timefold.ai/xsd/solver" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="https://timefold.ai/xsd/solver https://timefold.ai/xsd/solver/solver.xsd">
<!--    https://timefold.ai/docs/timefold-solver/latest/score-calculation/score-calculation.html#invalidScoreDetection-->
    <!-- To slowly prove there are no bugs in this code -->
<!--    <environmentMode>FULL_ASSERT</environmentMode>-->
<!--    <environmentMode>FAST_ASSERT</environmentMode>-->
    <randomType>MERSENNE_TWISTER</randomType>
    <randomSeed>0</randomSeed>
    <!-- To solve faster by saturating multiple CPU cores -->
<!--    <moveThreadCount>AUTO</moveThreadCount>-->
    <!--  https://timefold.ai/docs/timefold-solver/latest/configuration/configuration.html#randomNumberGenerator-->

    <!-- Define the model -->
    <solutionClass>com.plannel.schooltimetabling.domain.TimeTable</solutionClass>
    <entityClass>com.plannel.schooltimetabling.domain.Lesson</entityClass>

    <!-- Define the score function -->
    <scoreDirectorFactory>
        <constraintProviderClass>com.plannel.schooltimetabling.solver.TimeTableConstraintProvider</constraintProviderClass>
<!--        https://timefold.ai/docs/timefold-solver/latest/score-calculation/score-calculation.html#initializingScoreTrend-->
<!--        Most use cases only have negative constraints. Many of those have an InitializingScoreTrend that only goes down:-->
        <initializingScoreTrend>ONLY_DOWN</initializingScoreTrend>
    </scoreDirectorFactory>

    <!-- Configure the optimization algorithms (optional)
    https://timefold.ai/docs/timefold-solver/latest/optimization-algorithms/optimization-algorithms.html#optimizationAlgorithmsOverview
    Timefold supports three families of optimization algorithms: Exhaustive Search, Construction Heuristics and Metaheuristics.
    In practice, Metaheuristics (in combination with Construction Heuristics to initialize) are the recommended choice:

    https://timefold.ai/docs/timefold-solver/latest/optimization-algorithms/optimization-algorithms.html#whichOptimizationAlgorithmsShouldIUse

    https://timefold.ai/docs/timefold-solver/latest/optimization-algorithms/optimization-algorithms.html#solverPhase
    If no phases are configured, Timefold will default to a Construction Heuristic phase followed by a Local Search phase.
    Some phases (especially construction heuristics) will terminate automatically. Other phases (especially metaheuristics) will only terminate if the Phase is configured to terminate:

    If the Solver terminates (before the last Phase terminates itself), the current phase is terminated and all subsequent phases will not run.
    -->
    <!-- Optimization algorithms configuration -->
    <termination><!-- Solver termination -->
        <!-- 2 minutes and 30 seconds in ISO 8601 format P[n]Y[n]M[n]DT[n]H[n]M[n]S -->
        <spentLimit>PT2M30S</spentLimit>
    </termination>

    <!-- Tabu Search performs much better than Late Acceptance (default algo) on this use case -->
    <constructionHeuristic>
        <!-- First phase: First Fit Decreasing -->
<!--        <termination>&lt;!&ndash; Phase termination &ndash;&gt;-->
<!--            <spentLimit>PT5S</spentLimit>-->
<!--        </termination>-->
<!--        <constructionHeuristicType>FIRST_FIT</constructionHeuristicType>-->
<!--        Construction Heuristic phase (0) ended: time spent (693), best score (-1hard/-15soft), score calculation speed (1224/sec), step total (20)-->
<!--        <constructionHeuristicType>ALLOCATE_ENTITY_FROM_QUEUE</constructionHeuristicType>-->
<!--        Construction Heuristic phase (0) ended: time spent (657), best score (-1hard/-15soft), score calculation speed (1780/sec), step total (20).-->
<!--        <constructionHeuristicType>CHEAPEST_INSERTION</constructionHeuristicType>-->
<!--        Construction Heuristic phase (0) ended: time spent (1949), best score (-1hard/-7soft), score calculation speed (3730/sec), step total (20).-->
<!--        <constructionHeuristicType>ALLOCATE_FROM_POOL</constructionHeuristicType>-->
<!--        Construction Heuristic phase (0) ended: time spent (2011), best score (-1hard/-7soft), score calculation speed (3610/sec), step total (20).-->
<!--ERROR-->
<!--        <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>-->
<!--        The sorterManner (DECREASING_DIFFICULTY) on entity class (class com.plannel.schooltimetabling.domain.Lesson) fails because that entity class's @PlanningEntity annotation does not declare any difficulty comparison.-->
<!--        <constructionHeuristicType>WEAKEST_FIT</constructionHeuristicType>-->
<!--        The sorterManner (INCREASING_STRENGTH) on entity class (class com.plannel.schooltimetabling.domain.Lesson)'s variable (room) fails because that variable getter's @PlanningVariable annotation does not declare any strength comparison.-->
<!--        <constructionHeuristicType>WEAKEST_FIT_DECREASING</constructionHeuristicType>-->
<!--        The sorterManner (DECREASING_DIFFICULTY) on entity class (class com.plannel.schooltimetabling.domain.Lesson) fails because that entity class's @PlanningEntity annotation does not declare any difficulty comparison.-->
<!--        <constructionHeuristicType>STRONGEST_FIT</constructionHeuristicType>-->
<!--        The sorterManner (DECREASING_STRENGTH) on entity class (class com.plannel.schooltimetabling.domain.Lesson)'s variable (room) fails because that variable getter's @PlanningVariable annotation does not declare any strength comparison.-->
<!--        <constructionHeuristicType>STRONGEST_FIT_DECREASING</constructionHeuristicType>-->
<!--        The sorterManner (DECREASING_DIFFICULTY) on entity class (class com.plannel.schooltimetabling.domain.Lesson) fails because that entity class's @PlanningEntity annotation does not declare any difficulty comparison.-->
<!--        <constructionHeuristicType>ALLOCATE_TO_VALUE_FROM_QUEUE</constructionHeuristicType>-->
<!--        The config (QueuedValuePlacerConfig(null, null)) has no configured variableName for entityClass (class com.plannel.schooltimetabling.domain.Lesson) and because there are multiple variableNames ([room, timeslot]), it cannot be deduced automatically.-->
    </constructionHeuristic>
<!--    https://timefold.ai/docs/timefold-solver/latest/optimization-algorithms/optimization-algorithms.html#whichOptimizationAlgorithmsShouldIUse-->
<!--    https://stackoverflow.com/questions/36802284/optaplanner-how-to-specify-multiple-algorithms-->
<!--    https://stackoverflow.com/questions/60415436/how-can-i-configurate-the-late-acceptance-algorithm-->

    <!--# Sequence-->
    <!-- Second phase: Late Acceptance -->
    <localSearch>
        <termination><!-- Phase termination -->
            <terminationCompositionStyle>AND</terminationCompositionStyle>
<!--            <spentLimit>PT1M</spentLimit>-->
<!--            <bestScoreFeasible>true</bestScoreFeasible>-->
            <unimprovedSpentLimit>PT30S</unimprovedSpentLimit>
            <unimprovedStepCountLimit>100</unimprovedStepCountLimit>
        </termination>
        <localSearchType>LATE_ACCEPTANCE</localSearchType>
    </localSearch>
    <!-- Third phase: Tabu Search -->
    <localSearch>
        <termination><!-- Phase termination -->
            <terminationCompositionStyle>AND</terminationCompositionStyle>
<!--            <spentLimit>PT1M</spentLimit>-->
<!--            <bestScoreFeasible>true</bestScoreFeasible>-->
            <unimprovedSpentLimit>PT30S</unimprovedSpentLimit>
            <unimprovedStepCountLimit>100</unimprovedStepCountLimit>
        </termination>
        <localSearchType>TABU_SEARCH</localSearchType>
    </localSearch>

<!--    <localSearch>-->
<!--        5 sec -->
<!--        5 min -->
<!--        <localSearchType>LATE_ACCEPTANCE</localSearchType>-->
<!--        0hard/6soft-->
<!--        0hard/11soft-->
<!--        <localSearchType>TABU_SEARCH</localSearchType>-->
<!--        0hard/9soft-->
<!--        0hard/10soft-->
<!--        <localSearchType>VARIABLE_NEIGHBORHOOD_DESCENT</localSearchType>-->
<!--        0hard/10soft-->
<!--        0hard/10soft-->
<!--        <localSearchType>HILL_CLIMBING</localSearchType>-->
<!--        0hard/6soft-->
<!--        0hard/6soft-->
<!--        <localSearchType>SIMULATED_ANNEALING</localSearchType>-->
<!--        The acceptorType (SIMULATED_ANNEALING) currently requires a acceptorConfig.getSimulatedAnnealingStartingTemperature() (null).-->
<!--        <localSearchType>GREAT_DELUGE</localSearchType>-->
<!--        0hard/-4soft-->
<!--        0hard/2soft-->
<!--    </localSearch>-->
</solver>